#!/usr/bin/env python
#
# Copyright (c) 2016-2017 Jonathan Anderson
# All rights reserved.
#
# This software was developed by BAE Systems, the University of Cambridge
# Computer Laboratory, and Memorial University under DARPA/AFRL contract
# FA8650-15-C-7558 ("CADETS"), as part of the DARPA Transparent Computing
# (TC) research program.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

'''
Call-and-data-graph processor.

Usage:
    cgd dot         [--output=<dotfile>] <graph>
    cgd simplify    [--output=<cdgfile>] <graph>

Commands:
    dot             Output GraphViz .dot representation
    simplify        Simplify a complex graph via path compression

Options:
    -o --output=<outfile>   Output file (default depends on command)
'''

import docopt
import sys


args = docopt.docopt(__doc__)

cgname = args.pop('<graph>')
graph = cdg.load(open(cgname, 'rb'), cgname)
dimensions = (len(graph.nodes()), len(graph.edges()))
print('Loaded graph with %d nodes, %d edges' % dimensions)

outfile_name = args['--output'] if '--output' in args else None

if args['dot']:
    if outfile_name is None:
        outfile_name = cgname + '.dot'

    graph.to_dot(open(outfile_name, 'w'))

elif args['simplify']:
    simplified = graph.simplified()

    end_dimensions = (len(simplified.nodes()), len(simplified.edges()))
    print('Eliminated %d nodes, %d edges' %
          tuple(x - y for x, y in zip(dimensions, end_dimensions)))

    if outfile_name is None:
        outfile_name = cgname + '-simplified.cdg'

    simplified.save(open(outfile_name, 'wb'))

else:
    assert False    # docopt should not let us reach this point
